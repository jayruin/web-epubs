<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops"><head><title>Running</title><meta charset="utf-8"/><link href="css/style.css" type="text/css" rel="stylesheet"/><script src="js/script.js" type="text/javascript" async="async" defer="defer"></script></head><body><h1>Running</h1>

<h2 id="environment-variables">Environment Variables</h2>
<dl>
    <dt><code>PROJECTS_DIRECTORY</code></dt>
    <dd>Defaults to <code>projects</code></dd>

    <dt><code>EXPANDED_EPUBS_DIRECTORY</code></dt>
    <dd>Defaults to <code>docs</code></dd>

    <dt><code>PACKAGED_EPUBS_DIRECTORY</code></dt>
    <dd>Defaults to <code>dist</code></dd>

    <dt><code>EPUBCHECK_DIRECTORY</code></dt>
    <dd>Defaults to <code>epubcheck</code></dd>

    <dt><code>LOGS_DIRECTORY</code></dt>
    <dd>Defaults to <code>log</code></dd>

    <dt><code>BUNDLES_DIRECTORY</code></dt>
    <dd>Defaults to <code>bundles</code></dd>
</dl>

<h2 id="global-command-line-arguments">Global Command Line Arguments</h2>
<dl>
    <dt>positional argument <code>projects</code></dt>
    <dd>List of strings of project names (defaults to empty list). Each project should be a subdirectory of <code>PROJECTS_DIRECTORY</code>.</dd>

    <dt><code>--all</code></dt>
    <dd>Boolean flag (which defaults to false if absent). If present, <code>projects</code> will be ignored and all possible projects will be processed within the context of the running module.</dd>

    <dt><code>-t</code>, <code>--type</code></dt>
    <dd>
        Type of the EPUB to process. Possible values are:
        <ul>
            <li><code>pagimg</code></li>
            <li><code>epub2</code></li>
            <li><code>epub3</code> (default if not specified)</li>
        </ul>
    </dd>
</dl>

<h2 id="build">build</h2>
<pre><code>python -m app.run build</code></pre>
<p>Create an expanded EPUB of given type <code>--type</code>.</p>
<p>Additional command line arguments:</p>
<dl>
    <dt><code>-b</code>, <code>--bundles</code></dt>
    <dd>List of strings of the bundles to include (defaults to empty list). Each bundle should a subdirectory of <code>BUNDLES_DIRECTORY</code>. Bundles contain files to include in the output EPUB, such as shared CSS and JS files.</dd>
</dl>

<h2 id="pack">pack</h2>
<pre><code>python -m app.run pack</code></pre>
<p>Packages EPUBs in <code>EXPANDED_EPUBS_DIRECTORY</code> and places the packaged EPUBs in <code>PACKAGED_EPUBS_DIRECTORY</code>.</p>
<p>Additional command line arguments:</p>
<dl>
    <dt><code>-c</code>, <code>--compression</code></dt>
    <dd>Integer in range [0, 9] specifiying the compression level to use (defaults to 0, no compression).</dd>
</dl>

<h2 id="check">check</h2>
<pre><code>python -m app.run check</code></pre>
<p>Validate the project EPUBs using EPUBCheck and write the results to <code>LOGS_DIRECTORY</code>.</p>
<p>Additional command line arguments:</p>
<dl>
    <dt><code>-i</code>, <code>--install</code></dt>
    <dd>Boolean flag (which defaults to false if absent). If present, the latest version of EPUBCheck will be installed to <code>EPUBCHECK_DIRECTORY</code> before validating the EPUBs.</dd>
</dl></body></html>