name: Create Release ePubs
on:
  push:
    branches:
      - master
    paths:
      - "epub/**"
      - "!epub/zipping.py"
      - "!epub/build/**"
      - "!epub/build/__init__.py"
      - "!epub/check/**"
      - "!epub/pack.py"

  workflow_dispatch:

jobs:
  build:
    runs-on:
      - ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 16
          java-package: jdk
      - name: Install EPUBCheck
        run: |
          python -m epub.check.install
      - name: Create and validate ePubs
        run: |
          find ./epub -maxdepth 1 -mindepth 1 -type d -not -path "./epub/__pycache__" -not -path "./epub/build" -not -path "./epub/check" | tr "\n" "\0" | xargs -0 python -m epub.zipping
      - name: Create Release
        run: |
          assets=();
          for asset in ./epub/*.{epub,txt}; do
            assets+=("-a" "$asset");
          done;
          assets+=("-a" "./epubcheck.summary.json");
          tag_name="github-actions-release";
          release_name="GitHub Actions Release";
          body="Automated ePub release using GitHub Actions";
          message=$(printf "${release_name}\n\n${body}");
          hub release delete "$tag_name" || true;
          hub release create "${assets[@]}" -m "$message" "$tag_name";
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RUN_ID: ${{ github.run_number }}